@model GroupProject.Models.UserRoleViewModel

@{
    ViewBag.Title = "RegisterRole";
}

<h2>Assign Role to User</h2>


@using (Html.BeginForm("RegisterRole", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.HiddenFor(i => i.ApplicationUser.Email);

    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Assign Role</h4>
    <hr />

    @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Email, new SelectList(ViewBag.Users, "Email", "Email"), "--Select User--", new { @class = "form-control" })
            </div>
        </div>*@
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.ApplicationUser.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @*@Html.TextBoxFor(m => m.Email, new { @class = "form-control", @readonly = "readonly" })*@
            @Html.TextBoxFor(m => m.ApplicationUser.Email, new { @class = "form-control" })

        </div>
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.identity.Roles, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.identity.Roles, new SelectList(ViewBag.Roles, "Name", "Name"), "--Select role--", new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Assign" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
